/*Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.

 

Example 1:

Input: nums = [1,2,3]
Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]
*/


class Solution {
public:
     void help(vector<int>& nums, vector<vector<int>> &ans)
    {
        int s=nums.size();
        vector<int> v;
        sort(nums.begin(),nums.end());
         do{
             for(int i=0;i<s;i++){
                 v.push_back(nums[i]);
             }
             ans.push_back(v);
             v.clear();
         }
         while(next_permutation(nums.begin(),nums.end()));
    }
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> ans;
        help(nums,ans);
        return ans;
    }
};
